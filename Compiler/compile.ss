(library (Compiler compile)
  (export p423-compile p423-step)
  (import
    (chezscheme)
    (Framework driver)
    (Framework wrappers)
    (Framework match)
    (Framework helpers)
    (Compiler verify-scheme)
    (Compiler uncover-frame-conflict)
    (Compiler introduce-allocation-forms)
    (Compiler select-instructions)
    (Compiler uncover-register-conflict)
    (Compiler assign-registers)
    (Compiler everybody-home)
    (Compiler assign-frame)
    (Compiler finalize-frame-locations)
    (Compiler discard-call-live)
    (Compiler finalize-locations)
    (Compiler expose-frame-var)
    (Compiler expose-basic-blocks)
    (Compiler flatten-program)
    (Compiler generate-x86-64)
    )

  (define (assemble thunk)
    (with-output-to-file "t.s"
      thunk
      'replace)
    (unless (zero? (system "cc -m64 -o t t.s Framework/runtime.c"))
      (error 'assemble "assembly failed"))
    "./t")

;; Compose the complete Compiler as a pipeline of passes.
(define-compiler (p423-compile p423-step pass->wrapper)
  (verify-scheme)
  (uncover-frame-conflict)
  (introduce-allocation-forms)
  (iterate
   (select-instructions)
   (uncover-register-conflict)
   (assign-registers)
   (break/when everybody-home?)
   (assign-frame)
   (finalize-frame-locations)
   )
  (discard-call-live)
  (finalize-locations)
  (expose-frame-var)
  (expose-basic-blocks)
  (flatten-program)
  (generate-x86-64 assemble)
  )
)
