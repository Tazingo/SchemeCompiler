(library (Compiler compile)
  (export p423-compile p423-step)
  (import
    (chezscheme)
    (Framework driver)
    (Framework wrappers)
    (Framework match)
    (Framework helpers)
    (Compiler verify-uil)
    (Compiler remove-complex-opera*)
    (Compiler flatten-set!)
    (Compiler impose-calling-conventions)
    (Compiler expose-allocation-pointer)
    (Compiler uncover-frame-conflict)
    (Compiler pre-assign-frame)
    (Compiler assign-new-frame)
    (Compiler select-instructions)
    (Compiler uncover-register-conflict)
    (Compiler assign-registers)
    (Compiler everybody-home)
    (Compiler assign-frame)
    (Compiler finalize-frame-locations)
    (Compiler discard-call-live)
    (Compiler finalize-locations)
    (Compiler expose-frame-var)
    (Compiler expose-memory-operands)
    (Compiler expose-basic-blocks)
    (Compiler flatten-program)
    (Compiler generate-x86-64))

(define (assemble thunk)
  (with-output-to-file "t.s"
    thunk 
    'replace)
  (unless (zero? (system "cc -m64 -o t t.s Framework/runtime.c"))
    (error 'assemble "assembly failed"))
  "./t")

(define-compiler (p423-compile p423-step pass->wrapper)
  (verify-uil)

  ;; assign8: What you add to the rest of the compiler is up to you! -RRN [2013.02.25]

  (remove-complex-opera*)
  (flatten-set!)
  (impose-calling-conventions)
  (expose-allocation-pointer)
  (uncover-frame-conflict)
  (pre-assign-frame)
  (assign-new-frame)
  (iterate
    (finalize-frame-locations)
    (select-instructions)
    (uncover-register-conflict)
    (assign-registers)
    (break/when everybody-home?)
    (assign-frame)
    )
  (discard-call-live)
  (finalize-locations)
  (expose-memory-operands)
  (expose-frame-var)
  (expose-basic-blocks)
  (flatten-program)
  (generate-x86-64 assemble)
  )
)
